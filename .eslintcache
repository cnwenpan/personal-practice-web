[{"E:\\project\\personal-practice-web\\src\\index.js":"1","E:\\project\\personal-practice-web\\src\\App.js":"2","E:\\project\\personal-practice-web\\src\\reportWebVitals.js":"3","E:\\project\\personal-practice-web\\src\\layout\\index.js":"4","E:\\project\\personal-practice-web\\src\\Route\\index.js":"5","E:\\project\\personal-practice-web\\src\\pages\\Login\\index.js":"6","E:\\project\\personal-practice-web\\src\\pages\\Register\\index.js":"7","E:\\project\\personal-practice-web\\src\\pages\\Login\\api.js":"8","E:\\project\\personal-practice-web\\src\\pages\\Register\\api.js":"9","E:\\project\\personal-practice-web\\src\\layout\\Header\\index.js":"10","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\index.js":"11","E:\\project\\personal-practice-web\\src\\pages\\Program\\index.js":"12","E:\\project\\personal-practice-web\\src\\pages\\Home\\index.js":"13","E:\\project\\personal-practice-web\\src\\utils\\request.js":"14","E:\\project\\personal-practice-web\\src\\utils\\host.config.js":"15","E:\\project\\personal-practice-web\\src\\pages\\Program\\api.js":"16","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\TimeLine\\index.js":"17","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\TaskEdit\\index.js":"18","E:\\project\\personal-practice-web\\src\\components\\InfoBlock\\index.js":"19","E:\\project\\personal-practice-web\\src\\components\\CheckList\\index.js":"20","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\Block\\index.js":"21","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\api.js":"22","E:\\project\\personal-practice-web\\src\\pages\\Home\\api.js":"23","E:\\project\\personal-practice-web\\src\\pages\\Diary\\index.js":"24","E:\\project\\personal-practice-web\\src\\pages\\Diary\\api.js":"25"},{"size":524,"mtime":1607746696727,"results":"26","hashOfConfig":"27"},{"size":1082,"mtime":1608307468641,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1607746696734,"results":"29","hashOfConfig":"27"},{"size":2408,"mtime":1607746696728,"results":"30","hashOfConfig":"27"},{"size":647,"mtime":1608307160601,"results":"31","hashOfConfig":"27"},{"size":2431,"mtime":1608307160596,"results":"32","hashOfConfig":"27"},{"size":3380,"mtime":1608038802804,"results":"33","hashOfConfig":"27"},{"size":187,"mtime":1607746696729,"results":"34","hashOfConfig":"27"},{"size":214,"mtime":1607746696733,"results":"35","hashOfConfig":"27"},{"size":1293,"mtime":1608307321550,"results":"36","hashOfConfig":"27"},{"size":5198,"mtime":1608307160600,"results":"37","hashOfConfig":"27"},{"size":6950,"mtime":1608307160600,"results":"38","hashOfConfig":"27"},{"size":1482,"mtime":1608307160596,"results":"39","hashOfConfig":"27"},{"size":900,"mtime":1607746696734,"results":"40","hashOfConfig":"27"},{"size":45,"mtime":1607746696734,"results":"41","hashOfConfig":"27"},{"size":544,"mtime":1608307160596,"results":"42","hashOfConfig":"27"},{"size":898,"mtime":1608038802804,"results":"43","hashOfConfig":"27"},{"size":7116,"mtime":1608307160600,"results":"44","hashOfConfig":"27"},{"size":497,"mtime":1607746696724,"results":"45","hashOfConfig":"27"},{"size":4822,"mtime":1608307194475,"results":"46","hashOfConfig":"27"},{"size":626,"mtime":1607766797933,"results":"47","hashOfConfig":"27"},{"size":833,"mtime":1608038802804,"results":"48","hashOfConfig":"27"},{"size":200,"mtime":1608038802804,"results":"49","hashOfConfig":"27"},{"size":2027,"mtime":1608307160595,"results":"50","hashOfConfig":"27"},{"size":368,"mtime":1608307160595,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cibj1g",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"E:\\project\\personal-practice-web\\src\\index.js",[],["111","112"],"E:\\project\\personal-practice-web\\src\\App.js",[],"E:\\project\\personal-practice-web\\src\\reportWebVitals.js",[],"E:\\project\\personal-practice-web\\src\\layout\\index.js",["113","114","115","116"],"import React, {Component,createContext} from 'react';\r\nimport {Layout, Menu, Breadcrumb, Card} from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport 'antd/dist/antd.css';\r\nimport Header from \"./Header\";\r\nimport routeConfig from '../Route'\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nclass Structure extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Layout>\r\n                <Header/>\r\n                <Layout>\r\n                    <Sider width={200} className=\"site-layout-background\">\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={['1']}\r\n                            defaultOpenKeys={[routeConfig[0]['path']]}\r\n                            style={{height: '100%', borderRight: 0}}\r\n                        >\r\n                            {/*<SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"subnav 1\">*/}\r\n                            {\r\n                                routeConfig.map(item => {\r\n                                    if (!item.hidden) {\r\n                                        return <Menu.Item key={item.path}> <Link\r\n                                            to={item.path}>{item.name}</Link></Menu.Item>\r\n                                    }\r\n\r\n                                })\r\n                            }\r\n\r\n\r\n                            {/*</SubMenu>*/}\r\n\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout style={{padding: '0 24px 24px'}}>\r\n                        {/*<Breadcrumb style={{margin: '16px 0'}}>*/}\r\n                        {/*    <Breadcrumb.Item>Home</Breadcrumb.Item>*/}\r\n                        {/*    <Breadcrumb.Item>List</Breadcrumb.Item>*/}\r\n                        {/*    <Breadcrumb.Item>App</Breadcrumb.Item>*/}\r\n                        {/*</Breadcrumb>*/}\r\n                        <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                padding: 24,\r\n                                margin: 0,\r\n                                minHeight: 280,\r\n                            }}\r\n                        >\r\n\r\n                            {this.props.children}\r\n\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Structure;\r\n","E:\\project\\personal-practice-web\\src\\Route\\index.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Login\\index.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Register\\index.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Login\\api.js",["117"],"import axios from '@/utils/request.js'\r\nimport host from '@/utils/host.config.js'\r\nexport default {\r\n    login(data){\r\n        return axios.post(`${host}/account/login`, data)\r\n    }\r\n}\r\n","E:\\project\\personal-practice-web\\src\\pages\\Register\\api.js",[],"E:\\project\\personal-practice-web\\src\\layout\\Header\\index.js",["118"],"import React, {Component} from 'react';\r\nimport {Dropdown, Menu} from 'antd'\r\nimport cookies from 'js-cookie'\r\nimport './index.less'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        user: {}\r\n    }\r\n    handleLogout = () => {\r\n        cookies.remove('token');\r\n        window.location.href = '/#/login'\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const user = JSON.parse(cookies.get('user'))\r\n            this.setState({\r\n                user\r\n            })\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {user}=this.state;\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item key=\"0\">\r\n                    <a onClick={this.handleLogout}>\r\n                        退出\r\n                    </a>\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header_log\">修炼自己</div>\r\n\r\n                <div className=\"header_user_info\">\r\n                    <Dropdown arrow overlay={menu}>\r\n                        <span>{user.name}</span>\r\n                    </Dropdown>\r\n                </div>\r\n                <div style={{clear: 'both'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\index.js",["119"],"import React, {Component} from 'react';\r\nimport {Card, DatePicker, Form, Input} from 'antd'\r\nimport TimeLine from \"./components/TimeLine\";\r\nimport TaskEdit from \"./components/TaskEdit\";\r\nimport {PlusCircleOutlined, MinusCircleOutlined, CheckCircleOutlined} from '@ant-design/icons';\r\nimport classnames from 'classnames'\r\nimport moment from 'moment'\r\nimport Api from './api'\r\nimport './index.less'\r\n\r\nclass ProgramEdit extends Component {\r\n    state = {\r\n        data: [],\r\n        landMarksSelectedIndex: 0,\r\n        currentLandMark: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.queryLandMasks()\r\n    }\r\n\r\n    queryLandMasks = () => {\r\n        const {state} = this.props.location;\r\n        console.log(state)\r\n        if (!state) {\r\n            this.props.history.push({pathname: '/program'})\r\n            return\r\n        }\r\n        Api.landMaskList({programId: state.id}).then(res => {\r\n            const data = res\r\n            this.setState({\r\n                data: data,\r\n                currentLandMark: data.map(item=>item.type==='landmarks')[0],\r\n                landMarksSelectedIndex:data.findIndex(item=>item.type==='landmarks')\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleAdd = (row) => {\r\n        const {data} = this.state;\r\n        data.push({\r\n            id: 2,\r\n            name: '',\r\n            endTime: moment(new Date()),\r\n            status: 1,\r\n            type: 'landmarks'\r\n        })\r\n        this.setState({\r\n            data\r\n        })\r\n    }\r\n\r\n    handleDel = (row) => {\r\n\r\n    }\r\n\r\n    handleSave = (row) => {\r\n        const {state} = this.props.location;\r\n        row.endTime = moment(row.endTime).format('YYYY-MM-DD hh:mm:ss')\r\n        if (row.id === 2) {\r\n            Api.landMaskAdd({...row, programId: state.id}).then(res => {\r\n                this.queryLandMasks()\r\n            })\r\n        } else {\r\n            Api.landMaskUpdate({...row}).then(res => {\r\n                this.queryLandMasks()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleAddMask = () => {\r\n        this.setState({\r\n            data: [{\r\n                id: 2,\r\n                name: '',\r\n                endTime: moment(new Date()),\r\n                status: 1,\r\n                type: 'landmarks'\r\n            },]\r\n        })\r\n    }\r\n\r\n    handleEditMasks = (value, index) => {\r\n        const {data} = this.state;\r\n        data[index] = {...data[index], ...value}\r\n        this.setState({\r\n            data\r\n        })\r\n    }\r\n\r\n    renderLandmask = (row, index) => {\r\n        const {landMarksSelectedIndex} = this.state;\r\n        return row.type === 'landmarks' &&\r\n            <div\r\n                onClick={() => {\r\n                    this.setState({\r\n                        landMarksSelectedIndex: index,\r\n                        currentLandMark: row\r\n                    })\r\n                }}\r\n                className={classnames('landmask', {'selected': landMarksSelectedIndex === index})}\r\n            >\r\n\r\n                <Input\r\n                    defaultValue={row.name}\r\n                    onChange={(e) => {\r\n                        const {value} = e.target;\r\n                        this.handleEditMasks({name: value}, index)\r\n                    }} style={{width: 200}}/>\r\n\r\n                <DatePicker\r\n                    defaultValue={moment(row.end_time)}\r\n                    onChange={(date) => {\r\n                        this.handleEditMasks({endTime: date}, index)\r\n                    }\r\n                    } style={{width: 140, display: 'inline-block'}}\r\n                />\r\n\r\n                <PlusCircleOutlined style={{marginLeft: 10}} onClick={() => {\r\n                    this.handleAdd(row)\r\n                }}/>\r\n\r\n                <MinusCircleOutlined style={{marginLeft: 10}} onClick={() => {\r\n                    this.handleDel(row)\r\n                }}/>\r\n\r\n                <CheckCircleOutlined style={{marginLeft: 10, color: row.name.length > 0 ? '#52C41A' : ''}}\r\n                                     onClick={() => {\r\n                                         this.handleSave(row)\r\n                                     }}/>\r\n\r\n                <div className=\"line\"/>\r\n            </div>\r\n    }\r\n\r\n    render() {\r\n        const {data, currentLandMark} = this.state;\r\n        return (\r\n            <div className=\"edit_container\">\r\n                <div className=\"edit_left\">\r\n                    <Card>\r\n                        {data.length === 0 && <div onClick={this.handleAddMask}><PlusCircleOutlined/>新增里程碑</div>}\r\n                        {data.length > 0 && <TimeLine data={data} afterSlot={this.renderLandmask}/>}\r\n                    </Card>\r\n                </div>\r\n                <div className=\"edit_right\">\r\n                    <Card>\r\n                        {currentLandMark && <TaskEdit landMark={currentLandMark} onSuccess={this.queryLandMasks}/>}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgramEdit;\r\n","E:\\project\\personal-practice-web\\src\\pages\\Program\\index.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Home\\index.js",["120"],"import React, {Component} from 'react';\r\nimport {Card, Row, Col} from 'antd'\r\nimport moment from 'moment'\r\nimport InfoBlock from \"@/components/InfoBlock\";\r\nimport CheckList from '@/components/CheckList'\r\nimport Api from './api'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.queryTodayTasks()\r\n    }\r\n\r\n    queryTodayTasks = () => {\r\n\r\n        Api.today().then(res => {\r\n            this.setState({\r\n                data: res\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        const unDoTaskList = data.filter(item => item.status === 0);\r\n        let restTime = 0;\r\n        unDoTaskList.forEach(item => {\r\n            restTime = restTime + item.time_of_day\r\n        })\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <InfoBlock label=\"剩余时长\" value={restTime}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <InfoBlock label=\"剩余任务\" value={unDoTaskList.length}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n                <Card style={{marginTop: 20}}>\r\n                    <CheckList data={data} onRefresh={this.queryTodayTasks}/>\r\n\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","E:\\project\\personal-practice-web\\src\\utils\\request.js",[],"E:\\project\\personal-practice-web\\src\\utils\\host.config.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Program\\api.js",[],"E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\TimeLine\\index.js",[],"E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\TaskEdit\\index.js",[],"E:\\project\\personal-practice-web\\src\\components\\InfoBlock\\index.js",[],"E:\\project\\personal-practice-web\\src\\components\\CheckList\\index.js",["121"],"import React, {Component} from 'react';\r\nimport {Checkbox, Input, Modal} from \"antd\";\r\nimport classnames from 'classnames'\r\nimport Api from '@/pages/ProgramEdit/api'\r\nimport DiaryApi from '@/pages/Diary/api'\r\n\r\nimport './index.less'\r\n\r\nclass CheckList extends Component {\r\n    richTextRef = null;\r\n    richText = null;\r\n    state = {\r\n        current: {},\r\n        visible: false\r\n    }\r\n\r\n    handleOpenRecord = (row) => {\r\n        this.setState({\r\n                current: row,\r\n                visible: true\r\n            },\r\n            //     () => {\r\n            //\r\n            //     if (!this.richText) {\r\n            //         this.richText = new E(this.richTextRef);\r\n            //         this.richText.config.onchange = this.handleDiaryChange\r\n            //         this.richText.create()\r\n            //\r\n            //     }\r\n            //\r\n            //     this.richText.txt.html(row.diaryText)\r\n            //\r\n            // }\r\n        )\r\n    }\r\n\r\n    handleStatusChange = (e, row) => {\r\n        const {onRefresh} = this.props;\r\n        Api.taskUpdateStatus({recordId: row.id}).then(res => {\r\n            onRefresh()\r\n        })\r\n    }\r\n\r\n    handleSave = () => {\r\n        const {current} = this.state;\r\n        if (current.diaryId) {\r\n            DiaryApi.update({id: current.diaryId, data: current.diaryText}).then(res => {\r\n\r\n            })\r\n        } else {\r\n            DiaryApi.add({taskId: current.id, data: current.diaryText}).then(res => {\r\n\r\n            })\r\n        }\r\n    }\r\n    handleDiaryChange = (e) => {\r\n        const value = e.target.value\r\n        const {current} = this.state;\r\n        current.diaryText = value\r\n        this.setState({\r\n            current\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {current, visible} = this.state;\r\n        const {data} = this.props;\r\n        const unDoList = data.filter(item => item.status === null);\r\n        const doneList = data.filter(item => !!item.status);\r\n        const result = [...unDoList, ...doneList]\r\n        return (\r\n            <div className=\"check_list\">\r\n                <div className=\"check_list_header\">\r\n                    <div style={{width: 400}}>任务</div>\r\n                    <div style={{width: 100}}>优先级</div>\r\n                    <div>指标</div>\r\n                    <div>耗时</div>\r\n                    <div>日记</div>\r\n                </div>\r\n                {result && result.map(item => {\r\n                    return (\r\n                        <div key={item.id} className={classnames('check_list_body', {'gray': !!item.status})}>\r\n                            <div style={{width: 400}}>\r\n                                <Checkbox checked={!!item.status} onChange={(e) => {\r\n                                    this.handleStatusChange(e, item)\r\n                                }}>\r\n                                    {item.name}-<span style={{color: '#bfbdbd'}}>{item.programName}</span>\r\n                                </Checkbox>\r\n                            </div>\r\n\r\n                            <div className=\"check_list_body_level\">{item.level.toUpperCase()}</div>\r\n                            <div>{item.targets}</div>\r\n                            <div>{item.time_of_day || 0} 分钟</div>\r\n                            <div>\r\n                                <a onClick={() => {\r\n                                    this.handleOpenRecord(item)\r\n                                }}>\r\n                                    日记\r\n                                </a>\r\n                                <span className=\"check_list_body_diary_count\">{!!item.diaryText ? 1 : 0}</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <Modal\r\n                    visible={visible}\r\n                    onCancel={() => {\r\n\r\n                        this.setState({visible: false})\r\n                    }}\r\n                    maskClosable={false}\r\n                    closeIcon={' '}\r\n                    onOk={this.handleSave}\r\n                    // title=\"写日记\"\r\n                >\r\n                    <div className=\"check_list_body_diary_title\">\r\n                        <span>项目：</span><span>{current.programName}</span>\r\n                        <span>里程碑：</span><span>{current.landMarkName}</span>\r\n                        <span>任务：</span><span>{current.name}</span>\r\n                    </div>\r\n                    <Input.TextArea value={current.diaryText} onChange={this.handleDiaryChange}\r\n                                    autoSize={{minRows: 10}}/>\r\n                    {/*<div ref={ref => this.richTextRef = ref}>*/}\r\n\r\n                    {/*</div>*/}\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default CheckList;\r\n","E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\components\\Block\\index.js",[],["122","123"],"E:\\project\\personal-practice-web\\src\\pages\\ProgramEdit\\api.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Home\\api.js",[],"E:\\project\\personal-practice-web\\src\\pages\\Diary\\index.js",["124"],"import React, {Component} from 'react';\r\nimport {Card, List} from 'antd'\r\nimport classnames from 'classnames'\r\nimport Api from './api'\r\nimport './index.less'\r\n\r\nclass Diary extends Component {\r\n\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        Api.list().then(res => {\r\n            this.setState({\r\n                data: res\r\n            })\r\n        })\r\n    }\r\n\r\n    query = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        return (\r\n            <div>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={data}\r\n                    renderItem={item => (\r\n                        <div style={{\r\n                            padding:'0 10px',\r\n                            backgroundColor: '#ffffff',\r\n                            overflow: 'hidden',\r\n                            marginBottom:10\r\n                        }}>\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={<div className=\"diary_title\">{item.time}</div>}\r\n                                    description={\r\n                                        <div>\r\n                                            {item.list.map(i => <div\r\n                                                className={classnames('diary_item')}>\r\n                                                <div\r\n                                                    className={classnames('diary_item_name', `diary_item_level_${i.level}`)}>{i.name}</div>\r\n                                                <div className=\"diary_item_text\">{i.diaryText}</div>\r\n                                            </div>)}\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        </div>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Diary;\r\n","E:\\project\\personal-practice-web\\src\\pages\\Diary\\api.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":26,"nodeType":"131","messageId":"132","endLine":1,"endColumn":39},{"ruleId":"129","severity":1,"message":"133","line":2,"column":23,"nodeType":"131","messageId":"132","endLine":2,"endColumn":33},{"ruleId":"129","severity":1,"message":"134","line":2,"column":35,"nodeType":"131","messageId":"132","endLine":2,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":27,"column":54,"nodeType":"137","messageId":"138","endLine":27,"endColumn":56},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":7,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":31,"column":21,"nodeType":"144","endLine":31,"endColumn":52},{"ruleId":"129","severity":1,"message":"145","line":2,"column":27,"nodeType":"131","messageId":"132","endLine":2,"endColumn":31},{"ruleId":"129","severity":1,"message":"146","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":95,"column":33,"nodeType":"144","endLine":97,"endColumn":36},{"ruleId":"125","replacedBy":"147"},{"ruleId":"127","replacedBy":"148"},{"ruleId":"129","severity":1,"message":"134","line":2,"column":9,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'Card' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'moment' is defined but never used.",["149"],["150"],"no-global-assign","no-unsafe-negation"]